{
  "name": "mantisnxt",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "node scripts/dev-server-manager.js start",
    "dev:stop": "node scripts/dev-server-manager.js stop",
    "dev:status": "node scripts/dev-server-manager.js status",
    "dev:restart": "node scripts/dev-server-manager.js restart",
    "dev:raw": "next dev",
    "build": "npm run type-check && next build",
    "start": "next start",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "stabilize": "node scripts/system-stabilizer.js setup",
    "stabilize:cleanup": "node scripts/system-stabilizer.js cleanup",
    "stabilize:monitor": "node scripts/system-stabilizer.js monitor",
    "stabilize:health": "node scripts/system-stabilizer.js health",
    "stabilize:emergency": "node scripts/system-stabilizer.js emergency",
    "monitor:start": "node scripts/system-resource-monitor.js start",
    "monitor:check": "node scripts/system-resource-monitor.js check",
    "monitor:cleanup": "node scripts/system-resource-monitor.js cleanup",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:headed": "playwright test --headed",
    "test:component": "jest --testPathPattern=components",
    "test:api": "jest --testPathPattern=api",
    "test:integration": "jest --testPathPattern=integration",
    "test:utils": "jest --testPathPattern=utils",
    "test:performance": "jest --testPathPattern=performance --testTimeout=60000",
    "test:security": "npm audit && eslint . --ext .ts,.tsx --config .eslintrc.security.js",
    "test:accessibility": "axe-core-cli http://localhost:3000",
    "test:all": "npm run test && npm run test:e2e",
    "test:ci": "npm run test:coverage && npm run test:e2e",
    "test:parallel": "jest --maxWorkers=4",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --runInBand",
    "db:setup:test": "node scripts/setup-test-db.js",
    "db:migrate:test": "node scripts/migrate-test-db.js",
    "db:migrate:e2e": "node scripts/migrate-e2e-db.js",
    "db:migrate:perf": "node scripts/migrate-perf-db.js",
    "db:seed:test": "node scripts/seed-test-data.js",
    "db:seed:e2e": "node scripts/seed-e2e-data.js",
    "db:seed:perf": "node scripts/seed-perf-data.js",
    "db:migrate": "tsx scripts/run-migration.ts",
    "db:migrate:verify": "tsx scripts/verify-migration.ts",
    "db:validate": "tsx scripts/validate-database.ts",
    "db:validate:full": "node scripts/master-validation-runner.js",
    "db:validate:performance": "node scripts/performance-optimizer.js",
    "db:validate:flow": "node scripts/cross-module-tester.js",
    "db:validate:api": "node scripts/api-validation-suite.js",
    "db:sample-data": "node scripts/sample-data-generator.js",
    "ai:verify": "node scripts/verify-ai-providers.js",
    "ai:test": "node scripts/test-ai-generation.js",
    "ai:test:all": "node scripts/test-ai-generation.js --all",
    "validate:api": "tsx scripts/validate-api-endpoints.ts",
    "validate:api:report": "bash scripts/run-validation.sh",
    "validate:endpoints": "npm run validate:api && npm run validate:api:report",
    "validate:browser": "echo 'Use Chrome DevTools MCP - see VALIDATION_WORKFLOW.md'",
    "prepare": "husky install",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "format": "prettier --write \"**/*.{ts,tsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,json,md}\"",
    "validate:platform": "./scripts/validate-with-mcp.sh",
    "validate:platform:full": "./scripts/validate-with-mcp.sh --full",
    "perf:measure": "./node_modules/.bin/chrome-devtools-mcp performance --url http://localhost:3000",
    "perf:lighthouse": "npx lighthouse http://localhost:3000 --output html --output-path ./validation-reports/lighthouse.html",
    "analyze": "ANALYZE=true npm run build",
    "analyze:server": "ANALYZE=true BUNDLE_ANALYZE=server npm run build",
    "analyze:browser": "ANALYZE=true BUNDLE_ANALYZE=browser npm run build",
    "// Integration Scripts": "Commands for full inventory integration",
    "db:purge": "psql $NEON_SPP_DATABASE_URL -f database/scripts/purge_all_inventory_data.sql",
    "db:verify-schema": "psql $NEON_SPP_DATABASE_URL -f database/scripts/verify_schema_exists.sql",
    "db:create-schemas": "psql $NEON_SPP_DATABASE_URL -f database/scripts/create_missing_schemas.sql",
    "import:master": "tsx scripts/import_master_dataset.ts",
    "import:create-selection": "tsx scripts/create_default_selection.ts",
    "import:seed-stock": "tsx scripts/seed_stock_on_hand.ts",
    "integration:full": "./scripts/run_full_integration.sh",
    "integration:verify": "tsx scripts/verify_integration.ts"
  },
  "dependencies": {
    "@ai-sdk/anthropic": "^1.0.0",
    "@ai-sdk/gateway": "^1.0.0",
    "@ai-sdk/openai": "^1.0.0",
    "@ai-sdk/vercel": "^1.0.0",
    "@hookform/resolvers": "^5.2.2",
    "@neondatabase/serverless": "^1.0.2",
    "@radix-ui/react-accordion": "^1.2.12",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-scroll-area": "^1.2.10",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/postcss": "^4.1.13",
    "@tanstack/react-query": "^5.90.2",
    "@types/node": "^24.5.1",
    "@types/pg": "^8.15.5",
    "@types/react": "^19.1.13",
    "@types/react-dom": "^19.1.9",
    "ai": "^5.0.0",
    "autoprefixer": "^10.4.21",
    "axios": "^1.12.2",
    "bcryptjs": "^2.4.3",
    "canvas-confetti": "^1.9.3",
    "cheerio": "^1.1.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "csv-parse": "^5.6.0",
    "date-fns": "^4.1.0",
    "exceljs": "^4.4.0",
    "framer-motion": "^12.23.21",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.544.0",
    "next": "^15.5.3",
    "node-cache": "^5.1.2",
    "nodemailer": "^7.0.6",
    "pg": "^8.16.3",
    "postcss": "^8.5.6",
    "puppeteer": "^24.22.0",
    "react": "^19.1.1",
    "react-day-picker": "^9.11.0",
    "react-dom": "^19.1.1",
    "react-error-boundary": "^6.0.0",
    "react-hook-form": "^7.62.0",
    "react-is": "^19.1.1",
    "recharts": "^3.2.1",
    "sonner": "^2.0.7",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^3.4.17",
    "typescript": "^5.9.2",
    "uuid": "^13.0.0",
    "xlsx": "^0.18.5",
    "zod": "^4.1.9",
    "zustand": "^5.0.8"
  },
  "overrides": {
    "zod": "^4.1.9"
  },
  "devDependencies": {
    "@axe-core/cli": "^4.8.5",
    "@babel/plugin-syntax-jsx": "^7.27.1",
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@faker-js/faker": "^8.4.1",
    "@jest/types": "^29.6.3",
    "@playwright/test": "^1.47.0",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.4.8",
    "@testing-library/react": "^16.0.1",
    "@testing-library/user-event": "^14.5.2",
    "@types/bcryptjs": "^2.4.3",
    "@types/jest": "^29.5.12",
    "@types/jsonwebtoken": "^9.0.3",
    "@types/nodemailer": "^7.0.1",
    "@types/supertest": "^6.0.2",
    "chrome-devtools-mcp": "^0.4.0",
    "dotenv": "^17.2.2",
    "eslint": "^9.35.0",
    "eslint-config-next": "^15.5.3",
    "fetch-mcp": "0.0.5",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-junit": "^16.0.0",
    "lint-staged": "^15.2.0",
    "msw": "^2.4.5",
    "prettier": "^3.1.0",
    "prettier-plugin-tailwindcss": "^0.5.9",
    "redis": "^5.8.2",
    "supertest": "^7.0.0",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.7.0",
    "wait-on": "^7.2.0",
    "webpack-bundle-analyzer": "^4.10.1"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  }
}
