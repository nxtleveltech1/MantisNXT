{
  "permissions": {
    "allow": [
      "Bash(mv:*)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(npx @playwright/mcp:*)",
      "Bash(npx @21st-dev/magic:*)",
      "Bash(./verify-mcp-installation.bat)",
      "Bash(npx @jpisnice/shadcn-ui-mcp-server:*)",
      "Bash(npx @upstash/context7-mcp:*)",
      "Bash(timeout 10 npx @upstash/context7-mcp --api-key ctx7sk-63485f97-a194-4380-a721-55b3c5afee7b)",
      "Bash(claude doctor)",
      "Bash(dir \"C:\\Users\\garet\\.claude\" /b)",
      "Read(//c/Users/garet/.claude/**)",
      "Bash(..claudeverify-mcp-installation.bat)",
      "Bash(cmd /c:*)",
      "Bash(..verify-mcp-installation.bat)",
      "Bash(dir:*)",
      "Bash(cat:*)",
      "Read(//c/Users/garet//**)",
      "WebFetch(domain:docs.claude.com)",
      "mcp__shadcn__list_components",
      "Bash(mkdir:*)",
      "mcp__magic__21st_magic_component_builder",
      "mcp__shadcn__get_component",
      "Bash(npx create-next-app:*)",
      "Bash(claude mcp:*)",
      "mcp__supabase__list_projects",
      "mcp__supabase__apply_migration",
      "mcp__supabase__list_tables",
      "mcp__supabase__execute_sql",
      "Bash(npx tsc:*)",
      "mcp__playwright__browser_navigate",
      "Bash(curl:*)",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_snapshot",
      "Bash(pkill:*)",
      "mcp__playwright__browser_take_screenshot",
      "Bash(taskkill:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_close",
      "Bash(timeout:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(psql:*)",
      "Bash(set PGPASSWORD=P@33w0rd-1)",
      "Bash(PGPASSWORD:*)",
      "Bash(PGPASSWORD='P@33w0rd-1' psql:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_network_requests",
      "mcp__playwright__browser_evaluate",
      "mcp__playwright__browser_fill_form",
      "mcp__playwright__browser_install",
      "mcp__playwright__browser_resize",
      "mcp__playwright__browser_press_key",
      "Bash(npx playwright:*)",
      "Bash(powershell:*)",
      "Bash(npx next:*)",
      "Bash(rm:*)",
      "Bash(tasklist:*)",
      "Bash(xxd:*)",
      "Bash(npx eslint:*)",
      "mcp__neon__list_projects",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__neon__get_connection_string",
      "mcp__neon__get_database_tables",
      "mcp__neon__run_sql",
      "mcp__neon__describe_table_schema",
      "mcp__neon__run_sql_transaction",
      "mcp__neon__explain_sql_statement",
      "mcp__neon__describe_project",
      "mcp__neon__describe_branch",
      "mcp__neon__list_slow_queries",
      "Bash(python:*)",
      "mcp__neon__prepare_database_migration",
      "mcp__fs__read_text_file",
      "mcp__chrome-devtools__list_pages",
      "Bash(git check-ignore:*)",
      "mcp__chrome-devtools__navigate_page",
      "mcp__chrome-devtools__list_console_messages",
      "mcp__chrome-devtools__take_snapshot",
      "mcp__chrome-devtools__take_screenshot",
      "mcp__chrome-devtools__evaluate_script",
      "Bash(ls:*)",
      "Bash(redis-cli:*)",
      "Bash(git log:*)",
      "Read(//k/tmp/**)",
      "mcp__chrome-devtools__list_network_requests",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat(frontend): Production-ready console log cleanup and comprehensive audit\n\nCOMPLETED DELIVERABLES:\n- Removed 50+ excessive debug console.logs from dataValidation.ts\n- Added NODE_ENV guards for development-only logging\n- Created comprehensive frontend audit report\n- Identified 10+ failing API endpoints\n- Documented integration plan for React Query hooks\n\nCRITICAL FIXES:\n- dataValidation.ts: Removed emoji-based debug logging (🔄, ✅, ❌)\n- dataValidation.ts: Cleaned transformation and validation logging\n- dataValidation.ts: Added production/development mode guards\n- Created backup of original file for reference\n\nFILES MODIFIED:\n- src/lib/utils/dataValidation.ts (634 lines, -53 debug logs)\n- FRONTEND_AUDIT_REPORT.md (comprehensive audit findings)\n\nAUDIT FINDINGS:\nP0 Issues:\n- ✅ FIXED: Excessive console pollution in production\n- ❌ FOUND: 10+ API endpoints returning 500/400 errors\n\nP1 Issues:\n- Missing error boundaries on failed API calls\n- Missing loading states for data fetches\n- React Query hooks built but not integrated\n\nPERFORMANCE IMPACT:\n- Reduced console overhead in production\n- Eliminated string interpolation for debug logs\n- Cleaner browser console for end users\n\nNEXT STEPS:\n1. Fix failing API endpoints (/api/inventory/analytics, /api/stock-movements, etc.)\n2. Add error boundaries to components\n3. Integrate React Query hooks (useDashboardMetrics, useInventoryList)\n4. Update globals.css with design system\n5. Implement loading states\n\nTESTING:\n- Chrome DevTools audit completed\n- Homepage: 0 console errors, 0 network errors\n- Inventory: 0 console errors, 4 API failures\n- Analytics: 0 console errors, 6+ API failures\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
